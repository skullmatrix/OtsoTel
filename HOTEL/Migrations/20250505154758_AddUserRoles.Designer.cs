// <auto-generated />
using HotelWebsite.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HOTEL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250505154758_AddUserRoles")]
    partial class AddUserRoles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HotelWebsite.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 2,
                            Description = "Comfortable standard room with queen bed",
                            ImageUrl = "https://example.com/standard-room.jpg",
                            Price = 150.00m,
                            RoomNumber = "101",
                            Status = "Vacant",
                            Type = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            Description = "Spacious deluxe room with king bed",
                            ImageUrl = "https://example.com/deluxe-room.jpg",
                            Price = 250.00m,
                            RoomNumber = "201",
                            Status = "Vacant",
                            Type = "Deluxe"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 4,
                            Description = "Luxurious suite with separate living area",
                            ImageUrl = "https://example.com/suite-room.jpg",
                            Price = 400.00m,
                            RoomNumber = "301",
                            Status = "Vacant",
                            Type = "Suite"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            Description = "Comfortable standard room with queen bed",
                            ImageUrl = "https://example.com/standard-room.jpg",
                            Price = 150.00m,
                            RoomNumber = "102",
                            Status = "Under Maintenance",
                            Type = "Standard"
                        });
                });

            modelBuilder.Entity("HotelWebsite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Admin Address",
                            Email = "admin@matrix.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            LastName = "Matrix",
                            Password = "$2a$11$hzNimG1ocG4nQ33Fn4dn3eRbFDJuJ9BbnF2lM0k9.fCF8f7r0x2XO",
                            Photo = "https://cdn-icons-png.flaticon.com/256/2165/2165674.png",
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Hotel Front Desk",
                            Email = "frontdesk@matrix.com",
                            FirstName = "John",
                            IsAdmin = false,
                            LastName = "Doe",
                            Password = "$2a$11$P16IFGO/5EXYpI2RWksZmOtVfkS.WFiqJtVG8iJ71hpPkNjabPfpi",
                            Photo = "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
                            Role = "FrontDesk"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hotel Housekeeping",
                            Email = "housekeeping@matrix.com",
                            FirstName = "Jane",
                            IsAdmin = false,
                            LastName = "Smith",
                            Password = "$2a$11$YKqyIJqvtXTHAKVzZbVWfuk56qmyMQdyzdvHvi8nWA5VDRteUM8FS",
                            Photo = "https://cdn-icons-png.flaticon.com/512/4128/4128176.png",
                            Role = "Housekeeping"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
