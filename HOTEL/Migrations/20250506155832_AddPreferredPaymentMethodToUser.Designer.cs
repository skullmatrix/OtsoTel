// <auto-generated />
using System;
using HotelWebsite.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HOTEL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250506155832_AddPreferredPaymentMethodToUser")]
    partial class AddPreferredPaymentMethodToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HotelWebsite.Models.BillItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("HotelWebsite.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualCheckInDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ActualCheckOutDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CheckedInById")
                        .HasColumnType("int");

                    b.Property<int?>("CheckedInByUserId")
                        .HasColumnType("int");

                    b.Property<int>("CheckedOutById")
                        .HasColumnType("int");

                    b.Property<int?>("CheckedOutByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdVerification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequests")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheckedInById");

                    b.HasIndex("CheckedOutById");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelWebsite.Models.HousekeepingTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("RoomId");

                    b.ToTable("HousekeepingTasks");
                });

            modelBuilder.Entity("HotelWebsite.Models.MaintenanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ReportedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("ReportedByUserId");

                    b.HasIndex("RoomId");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("HotelWebsite.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("HotelWebsite.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 2,
                            Description = "Comfortable standard room with queen bed",
                            ImageUrl = "https://example.com/standard-room.jpg",
                            Price = 150.00m,
                            RoomNumber = "101",
                            Status = "Vacant",
                            Type = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            Description = "Spacious deluxe room with king bed",
                            ImageUrl = "https://example.com/deluxe-room.jpg",
                            Price = 250.00m,
                            RoomNumber = "201",
                            Status = "Vacant",
                            Type = "Deluxe"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 4,
                            Description = "Luxurious suite with separate living area",
                            ImageUrl = "https://example.com/suite-room.jpg",
                            Price = 400.00m,
                            RoomNumber = "301",
                            Status = "Vacant",
                            Type = "Suite"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            Description = "Comfortable standard room with queen bed",
                            ImageUrl = "https://example.com/standard-room.jpg",
                            Price = 150.00m,
                            RoomNumber = "102",
                            Status = "Under Maintenance",
                            Type = "Standard"
                        });
                });

            modelBuilder.Entity("HotelWebsite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("IdType")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LoyaltyMembershipId")
                        .HasColumnType("longtext");

                    b.Property<int?>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("Nationality")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("longtext");

                    b.Property<string>("PreferredPaymentMethod")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Admin Address",
                            Email = "admin@matrix.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            LastName = "Matrix",
                            Password = "$2a$11$wiOvkzNz92Minh6qAfcp1edvtc/UgDxjajF8qwwhorBGK6aJ0mJGi",
                            Photo = "https://cdn-icons-png.flaticon.com/256/2165/2165674.png",
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Hotel Front Desk",
                            Email = "frontdesk@matrix.com",
                            FirstName = "John",
                            IsAdmin = false,
                            LastName = "Doe",
                            Password = "$2a$11$CPVylWNze3Om/sQQeLc1B.rEHYcCrkRH0T5C3Kjh3v3vp6EthcwHW",
                            Photo = "https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
                            Role = "FrontDesk"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hotel Housekeeping",
                            Email = "housekeeping@matrix.com",
                            FirstName = "Jane",
                            IsAdmin = false,
                            LastName = "Smith",
                            Password = "$2a$11$ohssdchh7fyb0RfJQMKinO3hqps28dKO42VkVkeH.e7DO8Z7XVLQ2",
                            Photo = "https://cdn-icons-png.flaticon.com/512/4128/4128176.png",
                            Role = "Housekeeping"
                        });
                });

            modelBuilder.Entity("HotelWebsite.Models.BillItem", b =>
                {
                    b.HasOne("HotelWebsite.Models.Booking", "Booking")
                        .WithMany("BillItems")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelWebsite.Models.Booking", b =>
                {
                    b.HasOne("HotelWebsite.Models.User", "CheckedInBy")
                        .WithMany()
                        .HasForeignKey("CheckedInById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelWebsite.Models.User", "CheckedOutBy")
                        .WithMany()
                        .HasForeignKey("CheckedOutById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelWebsite.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelWebsite.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckedInBy");

                    b.Navigation("CheckedOutBy");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelWebsite.Models.HousekeepingTask", b =>
                {
                    b.HasOne("HotelWebsite.Models.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToUserId");

                    b.HasOne("HotelWebsite.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelWebsite.Models.MaintenanceRequest", b =>
                {
                    b.HasOne("HotelWebsite.Models.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToUserId");

                    b.HasOne("HotelWebsite.Models.User", "ReportedBy")
                        .WithMany()
                        .HasForeignKey("ReportedByUserId");

                    b.HasOne("HotelWebsite.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("ReportedBy");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelWebsite.Models.Payment", b =>
                {
                    b.HasOne("HotelWebsite.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelWebsite.Models.Booking", b =>
                {
                    b.Navigation("BillItems");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
