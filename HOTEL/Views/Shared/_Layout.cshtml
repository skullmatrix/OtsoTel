@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    var userId = HttpContextAccessor.HttpContext?.Session.GetString("UserId");
    var userName = HttpContextAccessor.HttpContext?.Session.GetString("UserName");
    var userPhoto = HttpContextAccessor.HttpContext?.Session.GetString("UserPhoto");
    var isAdmin = HttpContextAccessor.HttpContext?.Session.GetString("IsAdmin") == "True";
    var userRole = HttpContextAccessor.HttpContext?.Session.GetString("UserRole") ?? "Guest";

    // Active page check helper
    string IsActive(string controller, string action = "")
    {
        var currentController = ViewContext.RouteData.Values["Controller"]?.ToString();
        var currentAction = ViewContext.RouteData.Values["Action"]?.ToString();

        if (controller == currentController)
        {
            if (string.IsNullOrEmpty(action) || action == currentAction)
            {
                return "active";
            }
        }
        return "";
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"] - The Matrix Hotel</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/site.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <meta name="isLoggedIn" content="@User.Identity.IsAuthenticated.ToString().ToLower()">

    <style>
        /* Custom styles for the sidebar */
        body {
            overflow-x: hidden;
            font-family: 'Poppins', sans-serif;
        }

        /* Main content adjustments */
        .main-content {
            transition: margin-right 0.3s;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Sidebar styles */
        .sidebar {
            height: 100%;
            width: 300px;
            position: fixed;
            top: 0;
            right: -300px;
            background-color: #fff;
            overflow-x: hidden;
            transition: 0.3s;
            z-index: 1050;
            padding-top: 20px;
            box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);
        }

            .sidebar.active {
                right: 0;
            }

        /* User profile section in sidebar */
        .sidebar-user-profile {
            text-align: center;
            padding: 20px 15px;
            border-bottom: 1px solid #eee;
        }

            .sidebar-user-profile img {
                width: 120px;
                height: 120px;
                border-radius: 50%;
                object-fit: cover;
                border: 3px solid #28a745;
                padding: 3px;
                background-color: white;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

            .sidebar-user-profile h4 {
                margin-top: 15px;
                font-weight: 600;
            }

        /* Sidebar navigation links */
        .sidebar-nav {
            padding: 15px;
        }

            .sidebar-nav .nav-link {
                padding: 12px 15px;
                color: #333;
                border-radius: 8px;
                margin-bottom: 5px;
                transition: all 0.2s;
                display: flex;
                align-items: center;
            }

                .sidebar-nav .nav-link i {
                    margin-right: 10px;
                    width: 20px;
                    text-align: center;
                }

                .sidebar-nav .nav-link:hover {
                    background-color: rgba(40, 167, 69, 0.1);
                    color: #28a745;
                }

                .sidebar-nav .nav-link.active {
                    background-color: #28a745;
                    color: white;
                }

        /* Close button */
        .close-sidebar {
            position: absolute;
            top: 10px;
            right: 10px;
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #666;
        }

        /* Overlay when sidebar is open */
        .sidebar-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1040;
            display: none;
        }

            .sidebar-overlay.active {
                display: block;
            }

        /* Slim header that doesn't take too much space */
        .header {
            background-color: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            position: relative;
            z-index: 1030;
        }

        /* Toggle button for sidebar */
        .toggle-sidebar {
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            display: flex;
            align-items: center;
        }

            .toggle-sidebar img {
                width: 35px;
                height: 35px;
                border-radius: 50%;
                margin-left: 10px;
            }

        /* Content container should take full width */
        .content-container {
            width: 100%;
            padding: 0;
            flex: 1;
        }

        /* Footer adjustments */
        .footer {
            margin-top: auto;
            background-color: #222;
            color: #fff;
            padding: 40px 0 20px;
        }

        .footer-heading {
            color: #fff;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .footer-link {
            display: block;
            color: #ccc;
            text-decoration: none;
            margin-bottom: 8px;
            transition: color 0.2s;
        }

            .footer-link:hover {
                color: #28a745;
            }

        .footer-text {
            color: #ccc;
            margin-bottom: 15px;
        }

        .social-icons {
            display: flex;
            gap: 10px;
        }

        .footer-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: #333;
            color: #fff;
            text-decoration: none;
            transition: background-color 0.2s;
        }

            .footer-icon:hover {
                background-color: #28a745;
                color: #fff;
            }

        .newsletter-input {
            width: 100%;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            margin-bottom: 10px;
        }

        .subscribe-btn {
            background-color: #28a745;
            color: #fff;
            border: none;
            padding: 8px 15px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .subscribe-btn:hover {
                background-color: #218838;
            }

        .copyright {
            text-align: center;
            color: #888;
            padding-top: 20px;
            border-top: 1px solid #333;
        }

        /* Role badge styles */
        .role-badge-admin {
            background-color: #dc3545;
        }

        .role-badge-frontdesk {
            background-color: #0d6efd;
        }

        .role-badge-housekeeping {
            background-color: #ffc107;
            color: #212529;
        }

        .role-badge-maintenance {
            background-color: #fd7e14;
            color: #212529;
        }

        .role-badge-guest {
            background-color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="sidebar-overlay"></div>

    <!-- Sidebar Navigation -->
    <div class="sidebar">
        <button class="close-sidebar">
            <i class="fas fa-times"></i>
        </button>

        @if (!string.IsNullOrEmpty(userId))
        {
            <div class="sidebar-user-profile">
                @if (!string.IsNullOrEmpty(userPhoto))
                {
                    <img src="@userPhoto" alt="@userName" />
                }
                else
                {
                    <img src="https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png" alt="Default Profile" />
                }
                <h4>@userName</h4>
                <span class="badge @(userRole == "Administrator" ? "role-badge-admin" :
                                  userRole == "FrontDesk" ? "role-badge-frontdesk" :
                                  userRole == "Housekeeping" ? "role-badge-housekeeping" :
                                  userRole == "Maintenance" ? "role-badge-maintenance" : "role-badge-guest")">
                    @userRole
                </span>
            </div>

            <div class="sidebar-nav">
                @if (userRole == "Administrator")
                {
                    <a href="@Url.Action("Index", "Admin")" class="nav-link @IsActive("Admin", "Index")">
                        <i class="fas fa-home"></i> Dashboard
                    </a>
                    <a href="@Url.Action("UserManagement", "Admin")" class="nav-link @IsActive("Admin", "UserManagement")">
                        <i class="fas fa-users-cog"></i> User Management
                    </a>
                    <a href="@Url.Action("Admin", "Rooms")" class="nav-link @IsActive("Rooms", "Admin")">
                        <i class="fas fa-hotel"></i> Room Management
                    </a>
                    <a href="@Url.Action("Index", "Billing")" class="nav-link @IsActive("Billing")">
                        <i class="fas fa-file-invoice-dollar"></i> Billing
                    </a>
                    <a href="@Url.Action("FrontDesk", "CheckInOut")" class="nav-link @IsActive("CheckInOut")">
                        <i class="fas fa-calendar-check"></i> Check In/Out
                    </a>
                    <a href="@Url.Action("Index", "Reports")" class="nav-link @IsActive("Reports")">
                        <i class="fas fa-chart-line"></i> Reports
                    </a>
                    <a href="@Url.Action("Index", "Housekeeping")" class="nav-link @IsActive("Housekeeping")">
                        <i class="fas fa-broom"></i> Housekeeping
                    </a>
                    <a href="@Url.Action("Index", "Maintenance")" class="nav-link @IsActive("Maintenance")">
                        <i class="fas fa-tools"></i> Maintenance
                    </a>
                }
                else if (userRole == "FrontDesk")
                {
                    <a href="@Url.Action("FrontDesk", "CheckInOut")" class="nav-link @IsActive("CheckInOut", "FrontDesk")">
                        <i class="fas fa-home"></i> Front Desk
                    </a>
                    <a href="@Url.Action("Index", "Rooms")" class="nav-link @IsActive("Rooms", "Index")">
                        <i class="fas fa-hotel"></i> Rooms
                    </a>
                    <a href="@Url.Action("Index", "Billing")" class="nav-link @IsActive("Billing")">
                        <i class="fas fa-file-invoice-dollar"></i> Billing
                    </a>
                    <a href="@Url.Action("GuestDirectory", "FrontDesk")" class="nav-link @IsActive("FrontDesk", "GuestDirectory")">
                        <i class="fas fa-address-book"></i> Guest Directory
                    </a>
                    <a href="@Url.Action("Services", "FrontDesk")" class="nav-link @IsActive("FrontDesk", "Services")">
                        <i class="fas fa-concierge-bell"></i> Services
                    </a>
                    <a href="@Url.Action("Requests", "FrontDesk")" class="nav-link @IsActive("FrontDesk", "Requests")">
                        <i class="fas fa-clipboard-list"></i> Guest Requests
                    </a>
                }
                else if (userRole == "Housekeeping")
                {
                    <a href="@Url.Action("Index", "Housekeeping")" class="nav-link @IsActive("Housekeeping", "Index")">
                        <i class="fas fa-home"></i> Dashboard
                    </a>
                    <a href="@Url.Action("Schedule", "Housekeeping")" class="nav-link @IsActive("Housekeeping", "Schedule")">
                        <i class="fas fa-calendar-alt"></i> Schedule
                    </a>
                    <a href="@Url.Action("RoomStatus", "Housekeeping")" class="nav-link @IsActive("Housekeeping", "RoomStatus")">
                        <i class="fas fa-clipboard-check"></i> Room Status
                    </a>
                    <a href="@Url.Action("Inventory", "Housekeeping")" class="nav-link @IsActive("Housekeeping", "Inventory")">
                        <i class="fas fa-boxes"></i> Inventory
                    </a>
                    <a href="@Url.Action("Create", "Maintenance")" class="nav-link @IsActive("Maintenance", "Create")">
                        <i class="fas fa-tools"></i> Report Maintenance
                    </a>
                }
                else if (userRole == "Maintenance")
                {
                    <a href="@Url.Action("Index", "Maintenance")" class="nav-link @IsActive("Maintenance", "Index")">
                        <i class="fas fa-home"></i> Dashboard
                    </a>
                    <a href="@Url.Action("Assignments", "Maintenance")" class="nav-link @IsActive("Maintenance", "Assignments")">
                        <i class="fas fa-tasks"></i> My Assignments
                    </a>
                    <a href="@Url.Action("Create", "Maintenance")" class="nav-link @IsActive("Maintenance", "Create")">
                        <i class="fas fa-plus-circle"></i> New Request
                    </a>
                    <a href="@Url.Action("Inventory", "Maintenance")" class="nav-link @IsActive("Maintenance", "Inventory")">
                        <i class="fas fa-toolbox"></i> Inventory
                    </a>
                    <a href="@Url.Action("History", "Maintenance")" class="nav-link @IsActive("Maintenance", "History")">
                        <i class="fas fa-history"></i> Work History
                    </a>
                }
                else
                {
                    <!-- Regular guest menu -->
                    <a href="/" class="nav-link @IsActive("Home", "Index")">
                        <i class="fas fa-home"></i> Home
                    </a>
                    <a href="@Url.Action("Index", "Rooms")" class="nav-link @IsActive("Rooms", "Index")">
                        <i class="fas fa-hotel"></i> Rooms & Suites
                    </a>
                    <a href="@Url.Action("UserProfile", "Account")" class="nav-link @IsActive("Account", "UserProfile")">
                        <i class="fas fa-user"></i> My Profile
                    </a>
                    <a href="@Url.Action("MyBookings", "Booking")" class="nav-link @IsActive("Booking", "MyBookings")">
                        <i class="fas fa-bookmark"></i> My Bookings
                    </a>
                    <a href="@Url.Action("Services", "Guest")" class="nav-link @IsActive("Guest", "Services")">
                        <i class="fas fa-concierge-bell"></i> Hotel Services
                    </a>
                    <a href="@Url.Action("Feedback", "Guest")" class="nav-link @IsActive("Guest", "Feedback")">
                        <i class="fas fa-comment-alt"></i> Feedback
                    </a>
                }

                <!-- Common menu items for all roles -->
                <a href="@Url.Action("Settings", "Account")" class="nav-link @IsActive("Account", "Settings")">
                    <i class="fas fa-cog"></i> Settings
                </a>
                <a href="@Url.Action("Logout", "Account")" class="nav-link">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </div>
        }
        else
        {
            <div class="sidebar-nav">
                <div class="text-center mb-4">
                    <h4>Welcome to The Matrix</h4>
                    <p class="text-muted">Login to access your account</p>
                    <button class="btn btn-success w-75 mt-3" data-bs-toggle="modal" data-bs-target="#loginModal">
                        Sign In
                    </button>
                </div>
                <a href="/" class="nav-link @IsActive("Home", "Index")">
                    <i class="fas fa-home"></i> Home
                </a>
                <a href="@Url.Action("Index", "Rooms")" class="nav-link @IsActive("Rooms", "Index")">
                    <i class="fas fa-hotel"></i> Rooms & Suites
                </a>
                <a href="@Url.Action("Services", "Guest")" class="nav-link @IsActive("Guest", "Services")">
                    <i class="fas fa-concierge-bell"></i> Services
                </a>
                <a href="@Url.Action("About", "Home")" class="nav-link @IsActive("Home", "About")">
                    <i class="fas fa-info-circle"></i> About
                </a>
                <a href="@Url.Action("Contact", "Home")" class="nav-link @IsActive("Home", "Contact")">
                    <i class="fas fa-phone"></i> Contact
                </a>
            </div>
        }
    </div>

    <!-- Main Content Wrapper -->
    <div class="main-content">
        <!-- Header -->
        <header class="header">
            <nav class="navbar navbar-expand-lg navbar-light bg-white py-2">
                <div class="container">
                    <a class="navbar-brand" href="/">
                        <span class="fw-bold text-success">THE MATRIX</span>
                    </a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNav">
                        <ul class="navbar-nav me-auto">
                            <li class="nav-item"><a class="nav-link @IsActive("Home", "Index")" href="/">Home</a></li>
                            @if (userRole == "Administrator")
                            {
                                <li class="nav-item"><a class="nav-link @IsActive("Admin")" href="@Url.Action("Index", "Admin")">Admin</a></li>
                            }
                            @if (userRole == "FrontDesk")
                            {
                                <li class="nav-item"><a class="nav-link @IsActive("CheckInOut")" href="@Url.Action("FrontDesk", "CheckInOut")">Front Desk</a></li>
                            }
                            @if (userRole == "Housekeeping")
                            {
                                <li class="nav-item"><a class="nav-link @IsActive("Housekeeping")" href="@Url.Action("Index", "Housekeeping")">Housekeeping</a></li>
                            }
                            @if (userRole == "Maintenance")
                            {
                                <li class="nav-item"><a class="nav-link @IsActive("Maintenance")" href="@Url.Action("Index", "Maintenance")">Maintenance</a></li>
                            }
                            <li class="nav-item"><a class="nav-link @IsActive("Rooms")" href="@Url.Action("Index", "Rooms")">Rooms</a></li>
                            @if (userRole == "Guest" || string.IsNullOrEmpty(userId))
                            {
                                <li class="nav-item"><a class="nav-link @IsActive("Guest", "Services")" href="@Url.Action("Services", "Guest")">Services</a></li>
                                <li class="nav-item"><a class="nav-link @IsActive("Home", "About")" href="@Url.Action("About", "Home")">About</a></li>
                                <li class="nav-item"><a class="nav-link @IsActive("Home", "Contact")" href="@Url.Action("Contact", "Home")">Contact</a></li>
                            }
                        </ul>
                        @if (!string.IsNullOrEmpty(userId))
                        {
                            <!-- Signed-in user: Show name, photo, and role -->
                            <button class="toggle-sidebar d-flex align-items-center">
                                @if (!string.IsNullOrEmpty(userPhoto))
                                {
                                    <img src="@userPhoto" alt="Profile" class="me-2" />
                                }
                                <span class="me-2">@userName</span>
                                <span class="badge @(userRole == "Administrator" ? "role-badge-admin" :
                                                  userRole == "FrontDesk" ? "role-badge-frontdesk" :
                                                  userRole == "Housekeeping" ? "role-badge-housekeeping" :
                                                  userRole == "Maintenance" ? "role-badge-maintenance" : "role-badge-guest")">
                                    @userRole
                                </span>
                            </button>
                        }
                        else
                        {
                            <!-- Guest: Show "Book Now" button -->
                            <button class="btn btn-success book-now-btn" data-bs-toggle="modal" data-bs-target="#loginModal">
                                Book Now
                            </button>
                        }
                    </div>
                </div>
            </nav>
        </header>

        <!-- Content Container -->
        <div class="content-container">
            @RenderBody()
        </div>

        <!-- Footer -->
        <footer class="footer">
            <div class="container">
                <div class="row g-3">
                    <div class="col-md-3">
                        <h5 class="footer-heading">Quick Links</h5>
                        <a href="@Url.Action("Index", "Rooms")" class="footer-link">Room Booking</a>
                        <a href="@Url.Action("Index", "Rooms")" class="footer-link">Rooms</a>
                        <a href="@Url.Action("Contact", "Home")" class="footer-link">Contact</a>
                        <a href="@Url.Action("Services", "Guest")" class="footer-link">Services</a>
                    </div>
                    <div class="col-md-3">
                        <h5 class="footer-heading">Company</h5>
                        <a href="@Url.Action("PrivacyPolicy", "Home")" class="footer-link">Privacy Policy</a>
                        <a href="@Url.Action("RefundPolicy", "Home")" class="footer-link">Refund Policy</a>
                        <a href="@Url.Action("FAQ", "Home")" class="footer-link">F.A.Q</a>
                        <a href="@Url.Action("About", "Home")" class="footer-link">About</a>
                    </div>
                    <div class="col-md-3">
                        <h5 class="footer-heading">Social Media</h5>
                        <div class="social-icons">
                            <a href="#" class="footer-icon"><i class="fab fa-facebook"></i></a>
                            <a href="#" class="footer-icon"><i class="fab fa-twitter"></i></a>
                            <a href="#" class="footer-icon"><i class="fab fa-instagram"></i></a>
                            <a href="#" class="footer-icon"><i class="fab fa-linkedin"></i></a>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <h5 class="footer-heading">Newsletter</h5>
                        <p class="footer-text">Subscribe to get deals on rooms and discounts.</p>
                        <input type="email" class="newsletter-input" placeholder="Enter your email">
                        <button class="subscribe-btn mt-2">Subscribe</button>
                    </div>
                </div>
                <div class="copyright mt-3">
                    &copy; @DateTime.Now.Year The Matrix Hotel. All rights reserved.
                </div>
            </div>
        </footer>
    </div>

    <!-- Login Modal -->
    <div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-primary bg-opacity-10 border-0">
                    <h5 class="modal-title" id="loginModalLabel">Login to Book Your Stay</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div id="loginErrorMessage" class="alert alert-danger d-none mb-3" role="alert"></div>
                    <form id="loginForm">
                        <div class="mb-3">
                            <label for="email" class="form-label">Email address</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-envelope text-muted"></i></span>
                                <input type="email" class="form-control" id="email" name="email" required placeholder="your@email.com">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <div class="input-group">
                                <span class="input-group-text bg-light"><i class="fas fa-lock text-muted"></i></span>
                                <input type="password" class="form-control" id="password" name="password" required placeholder="Your password">
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="far fa-eye"></i>
                                </button>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="rememberMe">
                                <label class="form-check-label" for="rememberMe">
                                    Remember me
                                </label>
                            </div>
                            <a href="#" class="text-decoration-none text-primary">Forgot password?</a>
                        </div>
                        <input type="hidden" id="returnUrl" name="returnUrl" />
                        <input type="hidden" id="roomId" name="roomId" />
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Login to Book</button>
                        </div>
                    </form>
                    <div class="position-relative my-4">
                        <hr>
                        <span class="position-absolute top-50 start-50 translate-middle px-3 bg-white text-muted">OR</span>
                    </div>
                    <div class="text-center mt-3">
                        <p class="mb-0">Don't have an account? <a href="@Url.Action("SignUp", "Account")" class="text-primary fw-bold">Sign Up</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Custom Scripts -->
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Sidebar toggle functionality
            const toggleSidebar = document.querySelector('.toggle-sidebar');
            const closeSidebar = document.querySelector('.close-sidebar');
            const sidebar = document.querySelector('.sidebar');
            const sidebarOverlay = document.querySelector('.sidebar-overlay');
            const mainContent = document.querySelector('.main-content');

            function openSidebar() {
                sidebar.classList.add('active');
                sidebarOverlay.classList.add('active');
            }

            function closeSidebarFunc() {
                sidebar.classList.remove('active');
                sidebarOverlay.classList.remove('active');
            }

            if(toggleSidebar) {
                toggleSidebar.addEventListener('click', openSidebar);
            }

            if(closeSidebar) {
                closeSidebar.addEventListener('click', closeSidebarFunc);
            }

            if(sidebarOverlay) {
                sidebarOverlay.addEventListener('click', closeSidebarFunc);
            }

            // Password toggle functionality
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('password');

            if (togglePassword && passwordInput) {
                togglePassword.addEventListener('click', function () {
                    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                    passwordInput.setAttribute('type', type);

                    // Toggle icon
                    const eyeIcon = this.querySelector('i');
                    eyeIcon.classList.toggle('fa-eye');
                    eyeIcon.classList.toggle('fa-eye-slash');
                });
            }

            // Login form handling
            const loginForm = document.getElementById('loginForm');
            const errorMessageContainer = document.getElementById('loginErrorMessage');

            if (loginForm) {
                loginForm.addEventListener('submit', function (e) {
                    e.preventDefault(); // Prevent default form submission

                    // Clear previous error messages
                    errorMessageContainer.classList.add('d-none');
                    errorMessageContainer.textContent = '';

                    const email = document.getElementById('email').value;
                    const password = document.getElementById('password').value;
                    const roomId = document.getElementById('roomId').value;
                    const returnUrl = document.getElementById('returnUrl').value;
                    const rememberMe = document.getElementById('rememberMe').checked;

                    fetch('/Account/Login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ 
                            email: email, 
                            password: password,
                            rememberMe: rememberMe,
                            returnUrl: returnUrl,
                            roomId: roomId
                        }),
                    })
                    .then(response => {
                        if (!response.ok) {
                            // Handle server errors (e.g., 500 Internal Server Error)
                            return response.json().then(error => {
                                throw new Error(error.message || "An error occurred during login.");
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            // Close the modal
                            const modal = bootstrap.Modal.getInstance(document.getElementById('loginModal'));
                            modal.hide();

                            // Redirect based on roomId, returnUrl, or role
                            if (roomId) {
                                window.location.href = `/Booking/Create?roomId=${roomId}`;
                            } else if (data.redirectUrl) {
                                window.location.href = data.redirectUrl;
                            } else {
                                // Fallback to refreshing the page
                                window.location.reload();
                            }
                        } else {
                            // Show error in the modal instead of alert
                            errorMessageContainer.textContent = data.message || "Invalid login attempt. Please check your credentials.";
                            errorMessageContainer.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        console.error("Error during login:", error);
                        // Show error in the modal instead of alert
                        errorMessageContainer.textContent = error.message || "An error occurred during login. Please try again.";
                        errorMessageContainer.classList.remove('d-none');
                    });
                });
            }

            // Login modal functionality
            @if (TempData["ShowLoginModal"] != null && (bool)TempData["ShowLoginModal"])
            {
                <text>
                    const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
                    loginModal.show();
                </text>
            }
            
            // Book Now button functionality
            window.handleBookNowClick = function(roomId) {
                const isLoggedIn = document.querySelector('meta[name="isLoggedIn"]').content === 'true';
                
                if (isLoggedIn) {
                    // User is logged in, redirect to booking page
                    window.location.href = `/Booking/Create?roomId=${roomId}`;
                } else {
                    // User is not logged in, show login modal with roomId
                    const roomIdField = document.getElementById('roomId');
                    if (roomIdField) roomIdField.value = roomId;
                    
                    // Store current URL as return URL if needed
                    const returnUrlField = document.getElementById('returnUrl');
                    if (returnUrlField) returnUrlField.value = window.location.pathname;
                    
                    const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
                    loginModal.show();
                }
            };
            
            // Initialize any book-now-btn that doesn't have a roomId specified
            document.querySelectorAll('.book-now-btn:not([onclick])').forEach(button => {
                button.addEventListener('click', function() {
                    // For general book now buttons, just show the login modal
                    const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
                    loginModal.show();
                });
            });
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>