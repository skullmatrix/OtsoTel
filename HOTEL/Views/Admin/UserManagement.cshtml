@model IEnumerable<HotelWebsite.Models.User>

@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <!-- Stats Section -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="rounded-circle bg-primary bg-opacity-10 p-3">
                            <i class="fas fa-users text-primary fa-2x"></i>
                        </div>
                        <div class="ms-3">
                            <h6 class="text-muted mb-1">Total Users</h6>
                            <h4 class="mb-0">@Model.Count()</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="rounded-circle bg-success bg-opacity-10 p-3">
                            <i class="fas fa-user-shield text-success fa-2x"></i>
                        </div>
                        <div class="ms-3">
                            <h6 class="text-muted mb-1">Administrators</h6>
                            <h4 class="mb-0">@Model.Count(u => u.IsAdmin)</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="rounded-circle bg-info bg-opacity-10 p-3">
                            <i class="fas fa-user-check text-info fa-2x"></i>
                        </div>
                        <div class="ms-3">
                            <h6 class="text-muted mb-1">Active Users</h6>
                            <h4 class="mb-0">@Model.Count()</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- User List Card -->
    <div class="card border-0 shadow-sm rounded-lg overflow-hidden">
        <div class="card-header bg-white p-4 border-0">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                <div class="d-flex align-items-center">
                    <h5 class="mb-0 me-4">User Management</h5>
                    <div class="input-group" style="width: 300px;">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="fas fa-search text-muted"></i>
                        </span>
                        <input type="text" id="searchInput" class="form-control border-start-0 ps-0" 
                               placeholder="Search users...">
                    </div>
                </div>
                <button class="btn btn-primary" id="addUserBtn">
                    <i class="fas fa-user-plus me-2"></i>Add User
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0" id="userTable">
                <thead class="bg-light">
                    <tr>
                        <th class="ps-4">User</th>
                        <th>Role</th>
                        <th>Contact</th>
                        <th>Status</th>
                        <th class="text-end pe-4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td class="ps-4">
                                <div class="d-flex align-items-center">
                                    <div class="position-relative">
                                        @if (!string.IsNullOrEmpty(user.Photo))
                                        {
                                            <img src="@user.Photo" class="rounded-circle" width="45" height="45" 
                                                 style="object-fit: cover;" alt="@user.FirstName's profile" />
                                        }
                                        else
                                        {
                                            <div class="rounded-circle bg-light d-flex align-items-center justify-content-center" 
                                                 style="width: 45px; height: 45px;">
                                                <i class="fas fa-user text-secondary"></i>
                                            </div>
                                        }
                                        @if (user.IsAdmin)
                                        {
                                            <span class="position-absolute bottom-0 end-0 badge border border-white rounded-circle bg-success p-1">
                                                <i class="fas fa-check-circle fa-xs"></i>
                                            </span>
                                        }
                                    </div>
                                    <div class="ms-3">
                                        <h6 class="mb-1">@user.FirstName @user.LastName</h6>
                                        <small class="text-muted">@user.Email</small>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="badge bg-@(user.Role.ToLower() switch {
                                    "administrator" => "success",
                                    "frontdesk" => "primary",
                                    "housekeeping" => "info",
                                    "maintenance" => "warning",
                                    _ => "secondary"
                                }) rounded-pill">@user.Role</span>
                            </td>
                            <td>
                                <div>
                                    <small class="text-muted d-block">
                                        <i class="fas fa-envelope me-2"></i>@user.Email
                                    </small>
                                    @if (!string.IsNullOrEmpty(user.PhoneNumber))
                                    {
                                        <small class="text-muted d-block">
                                            <i class="fas fa-phone me-2"></i>@user.PhoneNumber
                                        </small>
                                    }
                                </div>
                            </td>
                            <td>
                                <span class="badge bg-success bg-opacity-10 text-success">Active</span>
                            </td>
                            <td class="text-end pe-4">
                                <div class="btn-group">
                                    <a asp-action="EditUser" asp-route-id="@user.Id" 
                                       class="btn btn-light btn-sm" data-bs-toggle="tooltip" title="Edit User">
                                        <i class="fas fa-edit text-primary"></i>
                                    </a>
                                    <button type="button" class="btn btn-light btn-sm delete-user"
                                            data-user-id="@user.Id" data-user-name="@user.FirstName @user.LastName"
                                            data-bs-toggle="tooltip" title="Delete User">
                                        <i class="fas fa-trash text-danger"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer bg-white border-0 p-4">
            <div class="d-flex justify-content-between align-items-center">
                <p class="text-muted mb-0">Showing <strong>@Model.Count()</strong> users</p>
                <nav>
                    <ul class="pagination pagination-sm mb-0">
                        <li class="page-item disabled">
                            <a class="page-link" href="#"><i class="fas fa-chevron-left"></i></a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#"><i class="fas fa-chevron-right"></i></a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Delete User Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Delete User</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-4">
                    <i class="fas fa-exclamation-triangle text-danger fa-4x mb-3"></i>
                    <h4>Are you sure?</h4>
                    <p class="mb-0">You are about to delete the user <strong id="deleteUserName"></strong>.</p>
                    <p>This action cannot be undone.</p>
                </div>
                <form id="deleteUserForm" asp-action="DeleteUser" method="post">
                    <input type="hidden" id="deleteUserId" name="id" />
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="fas fa-trash me-2"></i> Delete User
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Add New User</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <form id="addUserForm">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">First Name</label>
                            <input type="text" class="form-control" name="FirstName" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Last Name</label>
                            <input type="text" class="form-control" name="LastName" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-control" name="Email" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Address</label>
                            <input type="text" class="form-control" name="Address">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Password</label>
                            <input type="password" class="form-control" name="Password" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" name="ConfirmPassword" required>
                        </div>
                        <div class="col-md-12">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="IsAdmin" id="isAdmin">
                                <label class="form-check-label" for="isAdmin">
                                    Admin Account
                                </label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">
                    <i class="fas fa-save me-2"></i> Save User
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips
            const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
            tooltips.forEach(tooltip => new bootstrap.Tooltip(tooltip));

            // Search functionality with smooth animation
            const searchInput = document.getElementById('searchInput');
            const userRows = document.querySelectorAll('#userTable tbody tr');

            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                
                userRows.forEach(row => {
                    const text = row.textContent.toLowerCase();
                    const shouldShow = text.includes(searchTerm);
                    
                    row.style.opacity = shouldShow ? '1' : '0';
                    row.style.transform = shouldShow ? 'translateY(0)' : 'translateY(-10px)';
                    
                    setTimeout(() => {
                        row.style.display = shouldShow ? '' : 'none';
                    }, shouldShow ? 0 : 300);
                });
            });

            // Fade in animation for stats cards
            const cards = document.querySelectorAll('.card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                
                setTimeout(() => {
                    card.style.transition = 'all 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, 100 * index);
            });

            // Delete user modal handling
            const deleteUserBtns = document.querySelectorAll('.delete-user');
            const deleteUserModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
            const deleteUserIdInput = document.getElementById('deleteUserId');
            const deleteUserNameSpan = document.getElementById('deleteUserName');
            const deleteUserForm = document.getElementById('deleteUserForm');
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            
            deleteUserBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const userId = this.getAttribute('data-user-id');
                    const userName = this.getAttribute('data-user-name');
                    
                    deleteUserIdInput.value = userId;
                    deleteUserNameSpan.textContent = userName;
                    deleteUserModal.show();
                });
            });
            
            if (confirmDeleteBtn) {
                confirmDeleteBtn.addEventListener('click', function() {
                    deleteUserForm.submit();
                });
            }
            
            // Add user modal handling
            const addUserBtn = document.getElementById('addUserBtn');
            const addUserModal = new bootstrap.Modal(document.getElementById('addUserModal'));
            const addUserForm = document.getElementById('addUserForm');
            const saveUserBtn = document.getElementById('saveUserBtn');
            
            if (addUserBtn) {
                addUserBtn.addEventListener('click', function() {
                    addUserModal.show();
                });
            }
            
            if (saveUserBtn) {
                saveUserBtn.addEventListener('click', function() {
                    // Here you would normally validate the form and submit
                    // For now let's just simulate submission
                    const formData = new FormData(addUserForm);
                    
                    // Check if passwords match
                    const password = formData.get('Password');
                    const confirmPassword = formData.get('ConfirmPassword');
                    
                    if (password !== confirmPassword) {
                        alert('Passwords do not match');
                        return;
                    }
                    
                    // Convert FormData to JSON
                    const userData = {};
                    formData.forEach((value, key) => {
                        userData[key] = value;
                    });
                    
                    // This would be an actual API call in a real implementation
                    fetch('/Admin/AddUser', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(userData)
                    })
                    .then(response => {
                        if (response.ok) {
                            addUserModal.hide();
                            // Reload page to show the new user
                            window.location.reload();
                        } else {
                            alert('Error adding user');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                });
            }
        });
    </script>
}