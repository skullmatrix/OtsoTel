@model IEnumerable<HotelWebsite.Models.User>

@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0 rounded-lg">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h2 class="text-primary fw-bold mb-0">User Management</h2>
                        <a href="/Admin" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i> Back to Dashboard
                        </a>
                    </div>
                    <p class="text-muted">Manage registered users of The Matrix Hotel.</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm rounded-lg overflow-hidden">
                <div class="card-header bg-white p-4 border-0 d-flex justify-content-between align-items-center">
                    <h3 class="h5 mb-0">All Users</h3>
                    <div class="d-flex gap-2">
                        <div class="input-group">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search users...">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <button class="btn btn-primary" id="addUserBtn">
                            <i class="fas fa-user-plus me-2"></i> Add User
                        </button>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0" id="userTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="ps-4">User</th>
                                    <th>Email</th>
                                    <th>Address</th>
                                    <th class="text-end pe-4">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td class="ps-4">
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(user.Photo))
                                                {
                                                    <img src="@user.Photo" class="rounded-circle" width="40" height="40" alt="@user.FirstName's profile" style="object-fit: cover;" />
                                                }
                                                else
                                                {
                                                    <img src="https://cdn-icons-png.flaticon.com/256/727/727410.png" class="rounded-circle" width="40" height="40" alt="Default profile" />
                                                }
                                                <div class="ms-3">
                                                    <h6 class="mb-0">@user.FirstName @user.LastName</h6>
                                                    @if (user.IsAdmin)
                                                    {
                                                        <span class="badge bg-success">Admin</span>
                                                    }
                                                </div>
                                            </div>
                                        </td>
                                        <td>@user.Email</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(user.Address))
                                            {
                                                <span>@user.Address</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No address provided</span>
                                            }
                                        </td>
                                        <td class="text-end pe-4">
                                            <div class="btn-group">
                                                <a asp-action="EditUser" asp-route-id="@user.Id" class="btn btn-outline-primary btn-sm">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button" class="btn btn-outline-danger btn-sm delete-user" data-user-id="@user.Id" data-user-name="@user.FirstName @user.LastName">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer bg-white border-0 p-3 d-flex justify-content-between align-items-center">
                    <span>Showing <strong>@Model.Count()</strong> users</span>
                    <nav aria-label="User pagination">
                        <ul class="pagination pagination-sm mb-0">
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                            </li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#">Next</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete User Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Delete User</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-4">
                    <i class="fas fa-exclamation-triangle text-danger fa-4x mb-3"></i>
                    <h4>Are you sure?</h4>
                    <p class="mb-0">You are about to delete the user <strong id="deleteUserName"></strong>.</p>
                    <p>This action cannot be undone.</p>
                </div>
                <form id="deleteUserForm" asp-action="DeleteUser" method="post">
                    <input type="hidden" id="deleteUserId" name="id" />
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="fas fa-trash me-2"></i> Delete User
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Add New User</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <form id="addUserForm">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">First Name</label>
                            <input type="text" class="form-control" name="FirstName" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Last Name</label>
                            <input type="text" class="form-control" name="LastName" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-control" name="Email" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Address</label>
                            <input type="text" class="form-control" name="Address">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Password</label>
                            <input type="password" class="form-control" name="Password" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" name="ConfirmPassword" required>
                        </div>
                        <div class="col-md-12">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="IsAdmin" id="isAdmin">
                                <label class="form-check-label" for="isAdmin">
                                    Admin Account
                                </label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">
                    <i class="fas fa-save me-2"></i> Save User
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Search functionality
            const searchInput = document.getElementById('searchInput');
            const userTable = document.getElementById('userTable');
            
            if (searchInput) {
                searchInput.addEventListener('keyup', function() {
                    const searchTerm = this.value.toLowerCase();
                    const rows = userTable.querySelectorAll('tbody tr');
                    
                    rows.forEach(row => {
                        const userName = row.querySelector('td:first-child').textContent.toLowerCase();
                        const userEmail = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                        
                        if (userName.includes(searchTerm) || userEmail.includes(searchTerm)) {
                            row.style.display = '';
                        } else {
                            row.style.display = 'none';
                        }
                    });
                });
            }
            
            // Delete user modal handling
            const deleteUserBtns = document.querySelectorAll('.delete-user');
            const deleteUserModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
            const deleteUserIdInput = document.getElementById('deleteUserId');
            const deleteUserNameSpan = document.getElementById('deleteUserName');
            const deleteUserForm = document.getElementById('deleteUserForm');
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            
            deleteUserBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const userId = this.getAttribute('data-user-id');
                    const userName = this.getAttribute('data-user-name');
                    
                    deleteUserIdInput.value = userId;
                    deleteUserNameSpan.textContent = userName;
                    deleteUserModal.show();
                });
            });
            
            if (confirmDeleteBtn) {
                confirmDeleteBtn.addEventListener('click', function() {
                    deleteUserForm.submit();
                });
            }
            
            // Add user modal handling
            const addUserBtn = document.getElementById('addUserBtn');
            const addUserModal = new bootstrap.Modal(document.getElementById('addUserModal'));
            const addUserForm = document.getElementById('addUserForm');
            const saveUserBtn = document.getElementById('saveUserBtn');
            
            if (addUserBtn) {
                addUserBtn.addEventListener('click', function() {
                    addUserModal.show();
                });
            }
            
            if (saveUserBtn) {
                saveUserBtn.addEventListener('click', function() {
                    // Here you would normally validate the form and submit
                    // For now let's just simulate submission
                    const formData = new FormData(addUserForm);
                    
                    // Check if passwords match
                    const password = formData.get('Password');
                    const confirmPassword = formData.get('ConfirmPassword');
                    
                    if (password !== confirmPassword) {
                        alert('Passwords do not match');
                        return;
                    }
                    
                    // Convert FormData to JSON
                    const userData = {};
                    formData.forEach((value, key) => {
                        userData[key] = value;
                    });
                    
                    // This would be an actual API call in a real implementation
                    fetch('/Admin/AddUser', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(userData)
                    })
                    .then(response => {
                        if (response.ok) {
                            addUserModal.hide();
                            // Reload page to show the new user
                            window.location.reload();
                        } else {
                            alert('Error adding user');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                });
            }
        });
    </script>
}